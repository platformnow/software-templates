apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: register-component
  title: Register existing component to Software Catalog
  description: Registers existing component (GitHub repository) to Software Catalog
  tags:
    - import
    - catalog
    - register
spec:
  owner: platformnow/admin
  system: landscape-idp
  type: service

  parameters:
    - title: Provide information about the GitHub location
      required:
        - githubHost
        - githubOrganization
        - repositoryName
      properties:
        githubHost:
          title: GitHub hostname
          type: string
          description: Use github.com for GitHub Free, Pro, & Team or specify a hostname of your GitHub Enterprise instance.
          default: github.com
        githubOrganization:
          title: GitHub Organization
          type: string
        repositoryName:
          title: Repository name
          type: string
        targetPath:
          title: Target path
          type: string
          description: |
              If the component is located in a subdirectory of the repository, specify the path to the subdirectory.
              For example, if the component is located in the `packages/backend` subdirectory of the repository, specify `packages/backend`.

    - title: Provide information about the new component
      required:
        - componentOwner
        - componentType
        - componentLifecycle
      properties:
        componentName:
          title: Component Name
          type: string
          description: Name of the created component. If leaved empty the name of the repository will be used.
        componentOwner:
          title: Owner
          description: Select an owner from the list or enter a reference to a Group or a User
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        componentType:
          title: Type
          type: string
          enum:
            - api
            - app
            - library
            - service
            - website
            - other
          description: 'The type of component. Well-known and common values: service, website, library.'
          default: [service]
        componentLifecycle:
          title: Lifecycle
          type: string
          enum:
            - experimental
            - production
            - deprecated
            - unknown
          description: 'The lifecycle state of the component. Well-known and common values: experimental, production, deprecated.'
          default: [unknown]

  steps:
    - id: catalogTemplate
      name: Create catalog-info.yaml file
      action: fetch:template
      input:
        url: ../../../skeletons/catalog-info/
        values:
          componentName: ${{ parameters.componentName }}
          orgName: ${{ parameters.githubOrganization }}
          sourceControl: github.com
          repoName: ${{ parameters.repositoryName }}
          componentLifecycle: ${{ parameters.componentLifecycle }}
          applicationType: ${{ parameters.componentType }}
          owner: ${{ parameters.componentOwner }}

    - id: publishPR
      name: Open PR with catalog-info.yaml
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.githubHost }}?owner=${{ parameters.githubOrganization }}&repo=${{ parameters.repositoryName }}
        branchName: add-catalog-info
        targetPath: ${{ parameters.targetPath }}
        title: add catalog-info.yaml
        description: |
          This pull request adds a **Backstage entity metadata file** to this repository.

          After this pull request is merged, the component will become available.

          For more information, read an [overview of the Backstage software catalog](https://backstage.io/docs/features/software-catalog/).

    - id: register
      name: Register component
      action: catalog:register
      input:
        repoContentsUrl: https://${{ parameters.githubHost }}/${{ parameters.githubOrganization }}/${{ parameters.repositoryName }}/blob/${{ steps.publishPR.output.targetBranchName }}/
        catalogInfoPath: ${{ parameters.targetPath ? `/${parameters.targetPath}/catalog-info.yaml` : '/catalog-info.yaml' }}
        optional: true

  output:
    links:
      - title: 'Open PR #${{ steps.publishPR.output.pullRequestNumber }}'
        url: ${{ steps.publishPR.output.remoteUrl }}
